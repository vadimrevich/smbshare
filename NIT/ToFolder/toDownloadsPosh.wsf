<?xml version="1.0" encoding="UTF-8"?>
<!-- ***************************** -->
<!-- File wsf -->
<!-- toDownloadsPosh.wsf -->
<!--
	Tis Script will Open Downloads Folder
	on Local Computer
	If the Folder is not Exist it Print the Message
-->
<!-- ***************************** -->
<job id="ID1">
	<script language="JScript">
	<![CDATA[
/**********************************************************
 * Check_Registry_Key
 * This Function Checks a Registry Node
 *
 * PARAMETERS:	aKey as a String
 * RETURNS: 	0 if Success
 *				1 if Integrity Error
 *				2 if aKey not Found or not Assigned
**********************************************************/
function Check_Registry_Key(aKey){
	var wShell, theKey, theValue;
	wShell = new ActiveXObject("WScript.Shell");
	try {
		theKey = wShell.RegRead(aKey);
	}
	catch(err) {
		return 1;
	}
	if( typeof(theKey) == null)
		return 2;
	else if( typeof(theKey) == "string" && theKey.length == 0)
		return 2;
	else
		return 0;
}
/**********************************************************
 * Get_ARegistryStr_Value
 * This Function Get a Key Value of the Windows Registry
 *
 * PARAMETERS:	aKey
 * RETURNS:		a Registry Key if Success
 *				an Empty String if Error Occuur
**********************************************************/
function Get_ARegistryStr_Value(aKey){
	var wShell, theValue, iFlag;
	wShell = new ActiveXObject("WScript.Shell");
	iFlag = Check_Registry_Key(aKey);
	if( iFlag != 0 )
		return "";
	theValue = wShell.RegRead(aKey);
	if(typeof(theValue) != "string")
		return "";
	else
		return theValue;
}
/**********************************************************
 * Get_Downloads_Folder
 * This Function Get a Download Folder from the Windows Registry
 *
 * PARAMETERS:	NONE
 * RETURNS:		a Download Folder Path if Success
 *				an Empty String if Error Occuur
**********************************************************/
function Get_Downloads_Folder(){
	var fso, aValue;
	var SHCU_NODE, SHCU_Downloads, FO_Downloads;
	SHCU_NODE = "HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\";
	FO_Downloads = "{374DE290-123F-4565-9164-39C4925E467B}";
	SHCU_Downloads = SHCU_NODE + FO_Downloads;
	fso = new ActiveXObject("Scripting.FileSystemObject");
	aValue = Get_ARegistryStr_Value(SHCU_Downloads);
	if(aValue.length == 0) {
		WScript.Echo("\nError!\nDownloads Folder is not Found in Registry.");
		return "";
	}
	else {
		if(!fso.FolderExists(aValue)) {
			WScript.Echo("\nError!\nThe Downloads Folder is not Found at File System.");
			return "";
		}
		else {
			// WScript.Echo("\nSucces!\nA Downloads Folder = " + aValue);
			return aValue;
		}
	}
}
/**********************************************************
 * Goto_Downloads_Folder_PoshAsAdmin
 * This Function will Go to a Downloads Folder
 * with PowerShell as Admin User
 *
 * PARAMETERS:	NONE
 * RETURNS:		0 if Success
 *				1 if Error Occur
**********************************************************/
function Goto_Downloads_Folder_PoshAsAdmin(){
	var fso, wShell;
	var strPath, strCmd, strExe, envProc, shApp;
	// Define Objects
	fso = new ActiveXObject("Scripting.FileSystemObject");
	wShell = new ActiveXObject("WScript.Shell");
	shApp = new ActiveXObject("Shell.Application");
	envProc = wShell.Environment("PROCESS");
	strExe = envProc("SystemRoot") + "\\System32\\WindowsPowerShell\\v1.0\\" + "powershell.exe";
	if(!fso.FileExists(strExe)) {
		WScript.Echo("\nSystem Integrity Error!\nThe File: " + strExe + " is not Found!");
		return 1;
	}
	// Run Payloads
	strPath = Get_Downloads_Folder();
	if(strPath.length == 0)
		return 1;
	else {
		if(!fso.FolderExists(strPath))
			return 1;
		else {
			strCmd = " -NoLogo -NoExit -NoProfile -WindowStyle Normal -ExecutionPolicy Bypass -Command Set-Location " + "\"" + strPath + "\"";
			shApp.ShellExecute(strExe, strCmd, strPath, "runas", 1);
			return 0;
		}
	}
}
	]]>
	</script>
	<script language="VBScript">
	<![CDATA[
		Dim iFlag
		iFlag = Goto_Downloads_Folder_PoshAsAdmin()
	]]>
	</script>

<signature>
** SIG ** MIIJcwYJKoZIhvcNAQcCoIIJZDCCCWACAQExCzAJBgUr
** SIG ** DgMCGgUAMGcGCisGAQQBgjcCAQSgWTBXMDIGCisGAQQB
** SIG ** gjcCAR4wJAIBAQQQcAVhGs441BGiowAQS9NQkAIBAAIB
** SIG ** AAIBAAIBAAIBADAhMAkGBSsOAwIaBQAEFCEk3KYSDVuh
** SIG ** 6R7MqFzGYCL752AXoIIHEjCCAzUwggKioAMCAQICEJkW
** SIG ** fLCelp6QTP4DmBoxgmYwCQYFKw4DAh0FADCBnzEjMCEG
** SIG ** A1UEAxMaTklUIENsYXNzIDMgRVYgU1NMIENBIC0gRzQx
** SIG ** MDAuBgNVBAsTJ05ldyBJbnRlcm5ldCBUZWNobm9sb2dp
** SIG ** ZXMgVHJ1c3QgTmV0d29yazEnMCUGA1UEChMeTmV3IElu
** SIG ** dGVybmV0IFRlY2hub2xvZ2llcyBJbmMuMRAwDgYDVQQH
** SIG ** EwdTYXJhdG92MQswCQYDVQQGEwJSVTAgFw0yMDA3MjAw
** SIG ** NjI4NDdaGA8yMTIwMDcyMDA2Mjg0NlowKTEnMCUGA1UE
** SIG ** AxMeTmV3IEludGVybmV0IFRlY2hub2xvZ2llcyBJbmMu
** SIG ** MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDQ1J5P
** SIG ** MxpU8hfBgsQdWlC7jaSI6gyoOXU9lIzlq8Th4EImJa6h
** SIG ** IwtRj1AsI7EtNToFY79mfbpGpwj5vOJuL4cOQCN6AH1k
** SIG ** FQ1dsvPFcInMaskHQbI4bbo2SdkssPEYBHpRnxmluCpA
** SIG ** n33Q2omE4fDqNkP/YTOJBmq97r4K8WIAcQIDAQABo4Hs
** SIG ** MIHpMA8GA1UdEwEB/wQFMAMCAQUwIAYDVR0EAQH/BBYw
** SIG ** FDAOMAwGCisGAQQBgjcCARYDAgeAMDAGCisGAQQBgjcC
** SIG ** AQoEIjAgoB6AHGh0dHA6Ly9hbnRpY3JpbWluYWxvbmxp
** SIG ** bmUucnUwHQYDVR0lBBYwFAYIKwYBBQUHAwMGCCqFAwUB
** SIG ** GAIPMGMGA1UdAQRcMFqAEGft9iXxljpcUsmwg9jyG2mh
** SIG ** NDAyMTAwLgYDVQQDEydWZXJpU2lnbiBDbGFzcyAzIENv
** SIG ** ZGUgU2lnbmluZyAyMDIwLTIgQ0GCEIgt5Q0CI8WGSSAx
** SIG ** xykMZP4wCQYFKw4DAh0FAAOBgQCl/jyH83QyUErLnc0o
** SIG ** 0/8gWzEvxlY64xmNe+rEE7B243/YIDUCGZBIOKSgcpzo
** SIG ** 9tMCgY1aG0FuMIBsb+VL4C/17ITyhOfMAy9fvQ9bXhBL
** SIG ** WJ7XZ/M+1s2QtkZu+5mVfsnfmWm1F4vWJu1Xs5h31q53
** SIG ** nR9j9BjbiBKR+ppGFDlAQzCCA9UwggLBoAMCAQICEIgt
** SIG ** 5Q0CI8WGSSAxxykMZP4wCQYFKw4DAh0FADAyMTAwLgYD
** SIG ** VQQDEydWZXJpU2lnbiBDbGFzcyAzIENvZGUgU2lnbmlu
** SIG ** ZyAyMDIwLTIgQ0EwIBcNMjAwNzIwMDYyNzM1WhgPMjEy
** SIG ** MDA3MjAwNjI3MzRaMIGfMSMwIQYDVQQDExpOSVQgQ2xh
** SIG ** c3MgMyBFViBTU0wgQ0EgLSBHNDEwMC4GA1UECxMnTmV3
** SIG ** IEludGVybmV0IFRlY2hub2xvZ2llcyBUcnVzdCBOZXR3
** SIG ** b3JrMScwJQYDVQQKEx5OZXcgSW50ZXJuZXQgVGVjaG5v
** SIG ** bG9naWVzIEluYy4xEDAOBgNVBAcTB1NhcmF0b3YxCzAJ
** SIG ** BgNVBAYTAlJVMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCB
** SIG ** iQKBgQCnV+ciVLV8TSoMuck7HvoRB4lrtVYL0aVgIrqH
** SIG ** ktNwNyHe7sFP9Xr111Eg5Jdvdw5CffEw1DpdrTknvSug
** SIG ** sh+thGtJEWgFpaGjusB+tIYx9SyDkdF7vL/4I/6k10BE
** SIG ** obWbe9iOMzCwuu7v8p3MuWbZ05Cn5YxGLLDpoiSKogMe
** SIG ** HQIDAQABo4IBATCB/jASBgNVHRMBAf8ECDAGAQH/AgEF
** SIG ** MCAGA1UdBAEB/wQWMBQwDjAMBgorBgEEAYI3AgEWAwIH
** SIG ** gDAwBgorBgEEAYI3AgEKBCIwIKAegBxodHRwOi8vYW50
** SIG ** aWNyaW1pbmFsb25saW5lLnJ1MDsGA1UdJQQ0MDIGCCsG
** SIG ** AQUFBwMBBggrBgEFBQcDAgYIKwYBBQUHAwMGCCsGAQUF
** SIG ** BwMEBggqhQMFARgCDzBXBgNVHQEEUDBOgBB4leuhVGrS
** SIG ** yZlKiPAsnoXwoTQwMjEwMC4GA1UEAxMnVmVyaVNpZ24g
** SIG ** Q2xhc3MgMyBDb2RlIFNpZ25pbmcgMjAyMC0yIENBggSy
** SIG ** LhlFMAkGBSsOAwIdBQADggEBAAHNhrK52O5Yaon4AcVr
** SIG ** ygKPdPQINAhPi4Y6iDb8PnXdZKxJloMhgLAhr2FGCObe
** SIG ** WkP/usGDEHOYVd2s/nO3+/c+GasvhwZRTBdHMAe5Eosi
** SIG ** eSy/b7DeJK15LtRi1m7VCDYHGBgZM2RA85thdIRo8SCx
** SIG ** +rg+7JGd6RCMSYpyXs5kmc/XZL5BjERrste009TJuI/o
** SIG ** IEa0VpNuPmyydkPcxSUyHaMXieos+xus/u4O9fMe66ZX
** SIG ** GDGWhno79a0/LXutmRxz7yCmnpGevSV9jpvLhXI1AIMw
** SIG ** TtOkUegE5t1uF90FF4suoXzh2VFb0o0ENF8WJ8mEvyDm
** SIG ** iVLQH+pY/mZ2OX8xggHNMIIByQIBATCBtDCBnzEjMCEG
** SIG ** A1UEAxMaTklUIENsYXNzIDMgRVYgU1NMIENBIC0gRzQx
** SIG ** MDAuBgNVBAsTJ05ldyBJbnRlcm5ldCBUZWNobm9sb2dp
** SIG ** ZXMgVHJ1c3QgTmV0d29yazEnMCUGA1UEChMeTmV3IElu
** SIG ** dGVybmV0IFRlY2hub2xvZ2llcyBJbmMuMRAwDgYDVQQH
** SIG ** EwdTYXJhdG92MQswCQYDVQQGEwJSVQIQmRZ8sJ6WnpBM
** SIG ** /gOYGjGCZjAJBgUrDgMCGgUAoHAwEAYKKwYBBAGCNwIB
** SIG ** DDECMAAwGQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQw
** SIG ** HAYKKwYBBAGCNwIBCzEOMAwGCisGAQQBgjcCARYwIwYJ
** SIG ** KoZIhvcNAQkEMRYEFLxmdNlh1EOrhrmaCLqHDimQcGcV
** SIG ** MA0GCSqGSIb3DQEBAQUABIGAu58Qb3naoP8J/Gm8wWZZ
** SIG ** rqEUQg+Z6F2kTVXHUVZ6Q5uQf0bdD6KScthY0HHlSrqM
** SIG ** Szw39+oNmEU6guRQOASiP9sRjt7oZehP5lw5LC9GSQdm
** SIG ** 1UDW+WSIz7a819aQSRKX+budcGbYIAbo1ILOD9WWIQbT
** SIG ** f6D3pYdRZWVeUKI2RBs=
</signature>
</job>
