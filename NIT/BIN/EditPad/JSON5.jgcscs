JGCSCS
7
Download the Just Great Software Custom Syntax Coloring Scheme Editor from https://www.editpadpro.com/cscs.html to create and edit Just Great Software Custom Syntax Coloring Schemes
TRUE
JSON5
*.json
Just Great Software
support@editpadpro.com
http://www.editpadpro.com
https://json5.org/
TRUE


1
JSON5 Data Interchange Format
14
{
  // EditPad's JSON5 scheme
  /* With multi-line
     comments */
  unquoted: 'and you can quote me on that',
  singleQuotes: 'I can use "double quotes" here',
  lineBreaks: "Look, Mom! \
No \\n's!",
  hexadecimal: 0xdecaf,
  leadingDecimalPoint: .8675309, andTrailing: 8675309.,
  positiveSign: +1,
  trailingComma: 'in objects', andIn: ['arrays',],
  "backwardsCompatible": "with JSON",
} error

1
0
0

0
15
Single-line comment

//.*+
FALSE
FALSE
comm
0


-1
-1
2
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Multi-line comment

/\*
FALSE
TRUE
comm
0


-1
1
3
FALSE
FALSE
FALSE
0

/**/
code
FALSE
*/
2
0
TRUE
0
0
0
0
0
0
Opening brace

{
FALSE
FALSE
brkts
0


-1
-1
3
FALSE
FALSE
FALSE
0

{}
code
FALSE
}
2
2
TRUE
0
0
0
0
0
0
Closing brace

}
FALSE
FALSE
brkts
0


-1
-1
3
FALSE
FALSE
FALSE

0
{}
code
FALSE
{
2
3
TRUE
0
0
0
0
0
0
Opening bracket

\[
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE
0

[]
code
FALSE
]
2
2
TRUE
0
0
0
0
0
0
Closing bracket

]
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE

0
[]
code
FALSE
[
2
3
TRUE
0
0
0
0
0
0
Double-quoted string
Closing quote optional, to highlight unterminated strings to the end of the line; we allow trailing backslashes so they don't flash as errors while typing
(")(?:[^\\"\u0000-\u001F\v]++|\\(?>.|\R|\z))*+(")?
FALSE
FALSE
str
0


-1
-1
2
FALSE
FALSE
FALSE
1
2

code
FALSE

0
0
TRUE
0
0
0
0
0
0
Single-quoted string
Closing quote optional, to highlight unterminated strings to the end of the line; we allow trailing backslashes so they don't flash as errors while typing
(')(?:[^\\'\u0000-\u001F\v]++|\\(?>.|\R|\z))*+(')?
FALSE
FALSE
str
0


-1
-1
2
FALSE
FALSE
FALSE
1
2

code
FALSE

0
0
TRUE
0
0
0
0
0
0
Float
We allow trailing Es so they don't flash as errors while typing
[-+]?+(?:\m(?>0|[1-9][0-9]*+))?(?:(?>\.(?>[0-9]++)?(?>E[+-]?+(?>[0-9]++|$))?+|E[+-]?+(?>[0-9]++|$))(?>\M|$)|\.)
TRUE
FALSE
float
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Integer
We allow traling plus and minus signs so they don't flash as errors while typing
[-+]?+(?>\m(?>0(?:x[0-9A-F]++)?+|[1-9][0-9]*+)\M|$)
TRUE
FALSE
int
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Keyword

\m(?>true|false|null|Infinity|NaN)\M
TRUE
FALSE
keyword
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Colon

:
FALSE
FALSE
op
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Comma

,
FALSE
FALSE
op
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
1
TRUE
0
0
1
0
0
0
Identifier

\m(?>[\p{L}\p{Nl}$_]|\\u[0-9A-F]{4})(?:[\p{L}\p{Nl}$_\p{Mn}\p{Mc}\p{Nd}\p{Pc}\u200C\u200D]|\\u[0-9A-F]{4})*+\M
TRUE
FALSE
const
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
FALSE
0
0
0
0
0
0
Invalid characters
Anything that's not whitespace and not matched by any of the other elements is an error
\S
FALSE
FALSE
err
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
0
1
Multi-line comment
1
comm
2



0
0

0
1
Closing */

\*/
FALSE
FALSE
comm
0


-1
0
3
FALSE
FALSE
FALSE

0
/**/
code
FALSE
/*
0
0
TRUE
0
0
0
0
0
0
