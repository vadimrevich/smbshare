JGCSCS
7
Download the Just Great Software Custom Syntax Coloring Scheme Editor from https://www.editpadpro.com/cscs.html to create and edit Just Great Software Custom Syntax Coloring Schemes
TRUE
C/C++
*.c;*.cpp;*.h;*.hpp
Just Great Software
support@editpadpro.com
http://www.editpadpro.com/

FALSE
//

0
6
#define preprocessor
// comment
public void Test() {
  Integer = 42;  Float = 3.1415;
  String = "EditPad Pro";  Char = 'A';
}

3
0
0

0
18
Single-line comment
Backslash at the end of a line continues the comment on the next line
//[^\\\v]*+(?:\\(?:\R|\V)?+[^\\\v]*+)*+
FALSE
FALSE
comm
0


-1
-1
2
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Multi-line comment

/\*
FALSE
TRUE
comm
0


-1
1
3
FALSE
FALSE
FALSE
0

/**/
code
FALSE
*/
2
0
TRUE
0
0
0
0
0
0
Preprocessor statement

^[ \t]*+#
FALSE
TRUE
preproc
0


-1
2
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Operator

[-+*/=<>%&^|!~?]
FALSE
FALSE
op
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Opening brace

{
FALSE
FALSE
brkts
0


-1
-1
3
FALSE
FALSE
FALSE
0

{}
code
FALSE
}
2
2
TRUE
0
0
0
0
0
0
Closing brace

}
FALSE
FALSE
brkts
0


-1
-1
3
FALSE
FALSE
FALSE

0
{}
code
FALSE
{
2
3
TRUE
0
0
0
0
0
0
Opening bracket

\[
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE
0

[]
code
FALSE
]
2
0
TRUE
0
0
0
0
0
0
Closing bracket

]
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE

0
[]
code
FALSE
[
2
0
TRUE
0
0
0
0
0
0
Opening parenthesis

\(
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE
0

()
code
FALSE
)
2
0
TRUE
0
0
0
0
0
0
Closing parenthesis

\)
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE

0
()
code
FALSE
(
2
0
TRUE
0
0
0
0
0
0
String

(?:\m[LuU])?"
FALSE
FALSE
str
0


-1
3
1
FALSE
FALSE
FALSE
0

DQ
code
FALSE
"
2
0
TRUE
0
0
0
0
0
0
C++11 Raw String

(\mR[LuU]?"([^\v(]{0,16})\().*?(\)\2")
FALSE
TRUE
str
0


-1
-1
3
FALSE
FALSE
FALSE
1
3
R
code
FALSE

0
0
TRUE
0
0
0
0
0
0
Unclosed C++11 Raw String

(\mR[LuU]?"([^\v(]{0,16})\().*+
FALSE
TRUE
str
0


-1
-1
3
FALSE
FALSE
FALSE
1

R
code
FALSE
)\2"
0
0
TRUE
0
0
0
0
0
0
Character
Closing quote optional so an unclosed string is still colored as a string
(')[^'\\\v]*+(?:\\(?:.|$)[^'\\\v]*+)*+(')?
FALSE
FALSE
ch
0


-1
-1
3
FALSE
FALSE
FALSE
1
2
SQ
code
FALSE
'
2
0
TRUE
0
0
0
0
0
0
Float

(?>\m[0-9]++\.[0-9]++|\.[0-9]++)(?>E[+-]?+[0-9]++)?[FL]?+\M
TRUE
FALSE
float
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Integer

\m[0-9]++\M
FALSE
FALSE
int
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Hexadecimal

\m0x[a-f0-9]++\M
TRUE
FALSE
int
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Reserved words

\m(?>__asm|_asm|asm|auto|__automated|break|bool|case|catch|__cdecl|_cdecl|cdecl|char|class|__classid|__closure|const(?:_cast)?+|continue|__declspec|default|delete|__dispid|dllexport|dllimport|do(?:uble)?+|dynamic_cast|else|enum|__except|explicit|_export|__export|extern|false|__fastcall|_fastcall|__finally|float|for|friend|goto|if|__import|_import|inline|int|__int8|__int16|__int32|__int64|long|mutable|namespace|new|operator|__pascal|_pascal|pascal|private|protected|__property|public|__published|register|reinterpret_cast|return|__rtti|short|signed|sizeof|static(?:_cast)?+|__stdcall|_stdcall|struct|switch|template|this|__thread|throw|true|__try|try|typedef|typename|typeid|union|using|unsigned|virtual|void|volatile|wchar_t|while)\M
FALSE
FALSE
keyword
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
0
3
Multi-line Comment
1
comm
2



0
0

0
1
Closing */

\*/
FALSE
FALSE
comm
0


-1
-2
3
FALSE
FALSE
FALSE

0
/**/
code
FALSE

0
0
TRUE
0
0
0
0
0
0
Preprocessor
1
preproc
3



0
0

0
4
Continue
Backslash lets the preprocessor statement continue to the next line.  Supports all three Win/UNIX/Mac line break styles.
\\\R
FALSE
FALSE
preproc
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
End of line
Preprocessor statement ends at the end of the line
$
FALSE
FALSE
preproc
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Single-line comment
Comment ends the preprocessor statement
//[^\\\v]*+(?:\\(?:\R|\V)?+[^\\\v]*+)*+
FALSE
FALSE
comm
0


-1
0
2
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Multi-line comment

/\*
FALSE
TRUE
comm
0


-1
1
3
FALSE
FALSE
FALSE
0

/**/
code
FALSE
*/
0
0
TRUE
0
0
0
0
0
0
String
1
str
14



0
0

0
4
Closing quote

"
FALSE
FALSE
str
0


-1
0
1
FALSE
FALSE
FALSE

0
DQ
code
FALSE

0
0
TRUE
0
0
0
0
0
0
Continue
Backslash lets the string continue to the next line.  Supports all three Win/UNIX/Mac line break styles.
\\\R
FALSE
FALSE
str
0


-1
-1
15
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Escaped character

\\.
FALSE
FALSE
ch
0


-1
-1
7
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
End of line
Highlight unterminated strings until the end of the line
$
FALSE
FALSE
str
0


-1
0
1
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
