JGCSCS
7
Download the Just Great Software Custom Syntax Coloring Scheme Editor from https://www.editpadpro.com/cscs.html to create and edit Just Great Software Custom Syntax Coloring Schemes
TRUE
Eiffel
*.e
Just Great Software
support@editpadpro.com
http://www.editpadpro.com
http://www.eiffel.com
TRUE
--

0
13
note
    description: "EditPad's Eiffel Scheme"
class 
    HELLO 
create    
    make
feature
    make
        do
            io.put_string ("Hello World" + '!')
            numbers := 42 + 3.14 + 0FFX
        end
end -- class HELLO

1
0
0

0
16
Class
Highlight ALL_CAPS as a class name
\m[A-Z][A-Z0-9_]*+\M
FALSE
FALSE
typ
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
FALSE
0
0
0
0
0
0
Reserved words

18
\m(?>
across|agent|alias|all|and|as(?:sign)?|attribute|
check|class|convert|create|Current|
debug|deferred|do|
else(?:if)?|end|ensure|expanded|export|external|
False|feature|from|frozen|
if|implies|inherit|inspect|invariant|
like|local|loop|
note?|
obsolete|old|once|only|or|
Precursor|
redefine|rename|require|rescue|Result|retry|
select|separate|
then|True|TUPLE|
undefine|until|
variant|Void|
when|
xor)\M
TRUE
FALSE
keyword
0


-1
-1
3
TRUE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Legacy reserved words

\m(?>creation|indexing|infix|is|strip|unique)\M
TRUE
FALSE
keyword
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Real

\m(?>[0-9]++(?:\.[0-9]++)?|\.[0-9]++)(?:E[+-]?+[0-9]++)?+\M
TRUE
FALSE
float
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Hexadecimal number

\m[0-9][A-F0-9]++X\M
TRUE
FALSE
int
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Integer
_ is used as a thousands separator.  The scheme does not verify if digits are in groups of 3, so the number doesn't flicker while it's being typed in.
\m[0-9][_0-9]*+\M
FALSE
FALSE
int
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Single-line comment

--.*+
FALSE
FALSE
comm
0


-1
-1
2
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Character
Closing ' optional so unclosed strings are colored until the end of the line.  Quotes and nonprintables are escaped with %
(')[^'%\v]*+(?:%(?:.|$)[^'%\v]*+)*+(')?
FALSE
FALSE
ch
0


-1
-1
2
FALSE
FALSE
FALSE
1
2

code
FALSE
'
0
0
TRUE
0
0
0
0
0
0
String

"
FALSE
FALSE
str
0


-1
1
2
FALSE
FALSE
FALSE
0

DQ
code
FALSE
"
2
0
TRUE
0
0
0
0
0
0
Operator

[-+*/^\\:=<>]++|\.\.|\|\.\.\|
FALSE
FALSE
op
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Opening parenthesis

\(
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE
0

()
code
FALSE
)
2
0
TRUE
0
0
0
0
0
0
Closing parenthesis

\)
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE

0
()
code
FALSE
(
2
0
TRUE
0
0
0
0
0
0
Opening bracket

\[
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE
0

[]
code
FALSE
]
2
0
TRUE
0
0
0
0
0
0
Closing bracket

]
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE

0
[]
code
FALSE
[
2
0
TRUE
0
0
0
0
0
0
Opening brace

{
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE
0

{}
code
FALSE
}
2
0
TRUE
0
0
0
0
0
0
Closing brace

}
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE

0
{}
code
FALSE
{
2
0
TRUE
0
0
0
0
0
0
0
1
String
1
str
6



0
0

0
5
Closing "

"
FALSE
FALSE
str
0


-1
0
3
FALSE
FALSE
FALSE
0

DQ
code
FALSE
"
0
0
TRUE
0
0
0
0
0
0
End of line
Unclosed string without continuation -> stop coloring as a string
$
FALSE
FALSE
str
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Continuation till next line
Strings may span multiple lines by ending a line with % and starting the next one with %
%[ \t]*+\r?+\n[ \t]*+%
FALSE
FALSE
str
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Incomplete continuation
Separately color incomplete continuation, and switch back to the main scheme.  Without this token, while typing an a continuation, the "end of line" token will switch back to the main scheme, and color the line break and whitespace as plain text.  When typing the second % on the next line, the parser would continue from the plain text line break instead of from the % on the previous line.  This token takes care of that by grabbing the % on the previous line and the following line break.
%[ \t]*+\r?+\n[ \t]*+
FALSE
FALSE
str
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Escape
Quotes and nonprintables are escaped with %.
%\S
FALSE
FALSE
ch
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
