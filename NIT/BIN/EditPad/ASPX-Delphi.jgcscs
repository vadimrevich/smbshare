JGCSCS
7
Download the Just Great Software Custom Syntax Coloring Scheme Editor from https://www.editpadpro.com/cscs.html to create and edit Just Great Software Custom Syntax Coloring Schemes
TRUE
ASP.NET Delphi
*.aspx;*.asax;*.ascx
Just Great Software
support@editpadpro.com
http://www.editpadpro.com/

TRUE
<!--
-->
1
ASP.NET page using Delphi as the programming language.
11
<%@ Page Language="Delphi"%>
<html xmlns="http://www.w3.org/1999/xhtml">
<!-- Comment with a link http://www.editpadpro.com/ -->
<body bgcolor="white" text='black'>
<p><%#if AllIsWell then begin
        // Delphi code here
        S := 'EditPad''s ASP.NET with Delphi code scheme';
        Numbers[42] := $DECAF;
        repeat until Done;
      end;%></p>
</body></html>

0
29
0

0
23
ASP script closing tag
We didn't include this in the ASP script tag match, so the %> would always be colored as we want it, even if there is an unterminated comment or string in the code
\G%>
FALSE
FALSE
codehl
0


-1
-1
3
FALSE
FALSE
FALSE

0
<% %>

FALSE
<%
2
0
TRUE
0
0
0
0
0
0
Script closing tag
We didn't include this in the ASP script tag match, so </script> would always be colored as we want it, even if there is an unterminated comment or string in the code
\G</script>
FALSE
FALSE
codehl
0


9
-1
3
FALSE
FALSE
FALSE

0
script
xml
FALSE
<script>
2
0
TRUE
0
0
0
0
0
0
ASP Expression

(<%[$@])[^<>%]++(%>)
FALSE
FALSE
preproc
0


-1
-1
3
FALSE
FALSE
FALSE
1
2


FALSE

0
0
TRUE
0
0
0
0
0
0
ASP script tag

<%#?.*?(?=%>|\z)
FALSE
TRUE
codehl
0


1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
XML script tag

<script[^<>]*+>.*?(?=</script>|\z)
FALSE
TRUE
codehl
0


1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Empty tag
<tag.../>
<\i[^<>]{0,9999}+(?<=/)>
FALSE
FALSE
mu
0


5
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Opening tag
<tag> for which </tag> is expected
<(\i\c*+)[^<>]{0,9999}+>
FALSE
FALSE
mu
0


5
-1
3
FALSE
FALSE
FALSE
0

\1
xml
FALSE
</\1>
2
0
TRUE
0
0
0
0
0
0
Incomplete opening tag
Excluded from bracket matching
<(\i\c*+)[^<>]{0,9999}+
FALSE
FALSE
mu
0


5
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Closing tag
</tag>
</(\i\c*+)\s*+>
FALSE
FALSE
mu
0


9
-1
3
FALSE
FALSE
FALSE

0
\1
xml
FALSE
<\1>
2
0
TRUE
0
0
0
0
0
0
Incomplete closing tag
Excluded from bracket matching
</(\i\c*+)\s*+
FALSE
FALSE
mu
0


9
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Comment

<!--
FALSE
FALSE
comm
0


-1
13
3
FALSE
FALSE
FALSE
0

<!-->
xml
FALSE
-->
2
0
TRUE
0
0
0
0
0
0
CDATA

<!\[CDATA\[
FALSE
FALSE
str
0


-1
14
3
FALSE
FALSE
FALSE
0

[CDATA]
xml
FALSE
]]>
2
0
TRUE
0
0
0
0
0
0
DTD Tag

<!\i\c*+
FALSE
FALSE
mu
0


-1
16
3
FALSE
FALSE
FALSE
0

<!>
xml
FALSE
>
2
0
TRUE
0
0
0
0
0
0
Processing instruction

<\?
FALSE
FALSE
preproc
0


-1
15
3
FALSE
FALSE
FALSE
0

<?
xml
FALSE
?>
2
0
TRUE
0
0
0
0
0
0
Stray opening angle
Bracket pairing left blank so a stray opening angle is always unmatched
<
FALSE
FALSE
mud
0


-1
-1
3
FALSE
FALSE
FALSE
0



FALSE

0
0
TRUE
0
0
0
0
0
0
Stray closing angle
Bracket pairing left blank so a stray closing angle is always unmatched
>
FALSE
FALSE
mud
0


-1
-1
3
FALSE
FALSE
FALSE

0


FALSE

0
0
TRUE
0
0
0
0
0
0
Entity

&(?:#\d++|#x[\dA-Z]++|\w++);
FALSE
FALSE
mue
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0


\(
FALSE
FALSE

0


-1
-1
3
FALSE
FALSE
FALSE
0

(content)
content
FALSE
)
2
0
TRUE
0
0
0
0
0
0


\)
FALSE
FALSE

0


-1
-1
3
FALSE
FALSE
FALSE

0
(content)
content
FALSE
(
2
0
TRUE
0
0
0
0
0
0


\[
FALSE
FALSE

0


-1
-1
3
FALSE
FALSE
FALSE
0

[content]
content
FALSE
]
2
0
TRUE
0
0
0
0
0
0


]
FALSE
FALSE

0


-1
-1
3
FALSE
FALSE
FALSE

0
[content]
content
FALSE
[
2
0
TRUE
0
0
0
0
0
0


{
FALSE
FALSE

0


-1
-1
3
FALSE
FALSE
FALSE
0

{content}
content
FALSE
}
2
0
TRUE
0
0
0
0
0
0


}
FALSE
FALSE

0


-1
-1
3
FALSE
FALSE
FALSE

0
{content}
content
FALSE
{
2
0
TRUE
0
0
0
0
0
0
0
19
Delphi
0

3
codehl
//

0
0
3
0
9
ASP tag
Since this is a detail subscheme, we need to color the opening tag too
\G<%#?
FALSE
FALSE
codehl
0


-1
-1
3
FALSE
FALSE
FALSE
0

<% %>

FALSE
%>
2
0
TRUE
0
0
0
0
0
0
Script tag
Since this is a detail subscheme, we need to color the opening tag too
\G<script[^<>]*+>\R?+
FALSE
FALSE
codehl
0


5
-1
3
FALSE
FALSE
FALSE
0

script
xml
FALSE
</script>
2
0
TRUE
0
0
0
0
0
0
Begin
Reserved words that pair up with "end"; "class" and "interface" are tricky because they only pair up with "end" in type definitions
\m(?>begin|case|record|try|initialization|(?<=\M(?:\s*+<[[:w:]\s:,]++>)?+\s*+=\s*+)(?:class|interface|object)(?!\s*+(?:(?:\([^);]*+\))?+\s*+;|of)))\M
TRUE
FALSE
keyword
0


-1
-1
3
FALSE
FALSE
FALSE
0

beginend
code
FALSE
end
1
2
FALSE
0
0
0
0
0
2
End

\mend\M
TRUE
FALSE
keyword
0


-1
-1
3
FALSE
FALSE
FALSE

0
beginend
code
FALSE
begin
1
3
FALSE
0
0
0
0
0
2
Repeat

\mrepeat\M
TRUE
FALSE
keyword
0


-1
-1
3
FALSE
FALSE
FALSE
0

repeatuntil
code
FALSE
until
1
2
FALSE
0
0
0
0
0
2
Until

\muntil\M
TRUE
FALSE
keyword
0


-1
-1
3
FALSE
FALSE
FALSE

0
repeatuntil
code
FALSE
repeat
1
1
FALSE
1
2
0
0
0
2
Property

\mproperty\M
TRUE
FALSE
keyword
0


-1
2
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
2
Reserved words
Must be listed after "begin" so we can match "class" and "interface" with this element if the "begin" element doesn't match them
\m(?>absolute|abstract|and|array|as|assembler|automated|cdecl|class|const(?:ructor)?|deprecated|destructor|dispid|dispinterface|div|do(?:wnto)?|dynamic|else|except|exports?|external|far|file|finalization|finally|for(?:ward)?|function|goto|if|implementation|in(?:herited|line|terface)?|is|label|library|message|mod|near|nil|not|object|of|on|or|out|overload|override|packed|pascal|platform|private|procedure|program|protected|public|published|raise|register|reintroduce|resourcestring|safecall|set|shl|shr|stdcall|strict|string|then|threadvar|to|type|unit|uses|var|virtual|while|with|xor)\M
TRUE
FALSE
keyword
0


-1
-1
3
FALSE
FALSE
FALSE



code
FALSE

0
0
TRUE
0
0
0
0
0
0
Operator

[-+*@^<>=]++|/(?!/)|:=
FALSE
FALSE
op
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Delphi Property
3

3
codehl
//

0
0
3
0
2
Reserved words
These words are only reserved in property definitions
\m(?>read|write|index|default|nodefault|string|array)\M
TRUE
FALSE
keyword
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
End of property definition

;
FALSE
FALSE

0


-1
-2
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Delphi Common
4
0
13
Float

\m[0-9]++(?:\.[0-9]++(?:E[+-]?[0-9]++)?+|E[+-]?[0-9]++)\M
TRUE
FALSE
float
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Integer

\m[0-9]++\M
TRUE
FALSE
int
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Hexadecimal number

\$[A-F0-9]++\M
TRUE
FALSE
int
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Character

#(?:\$[A-F0-9]++|[0-9]++)\M
TRUE
FALSE
ch
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
String
Closing ' optional so unclosed strings are colored until the end of the line
(')(?:[^'\v]++|'')*+('?)
FALSE
FALSE
str
0


-1
-1
6
FALSE
FALSE
FALSE
1
2

code
FALSE
'
2
0
TRUE
0
0
0
0
57
0
// comment

//.*+
FALSE
FALSE
comm
0


-1
-1
2
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Compiler directive
Closing } optional so an unclosed directive is colored until the end of the file
({)\$[^}]*+(})?
FALSE
FALSE
preproc
0


-1
-1
3
FALSE
FALSE
FALSE
1
2
{$}

FALSE
}
2
0
TRUE
0
0
0
0
0
0
{ comment }
Closing } optional so an unclosed comment is colored until the end of the file
({)[^}]*+(})?
FALSE
FALSE
comm
0


-1
-1
2
FALSE
FALSE
FALSE
1
2
{}

FALSE
}
0
0
TRUE
0
0
0
0
0
0
(* comment
We use a toggle subscheme to find the closing tag for performance reasons, since we cannot use a possessive negated character class to skip over the commented text
\(\*
FALSE
FALSE
comm
0


-1
4
3
FALSE
FALSE
FALSE
0

(**)

FALSE
*)
0
0
TRUE
0
0
0
0
0
0
Opening bracket

\[
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE
0

[]
code
FALSE
]
2
0
TRUE
0
0
0
0
0
0
Closing bracket

]
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE

0
[]
code
FALSE
[
2
0
TRUE
0
0
0
0
0
0
Opening parenthesis

\(
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE
0

()
code
FALSE
)
2
0
TRUE
0
0
0
0
0
0
Closing parenthesis

\)
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE

0
()
code
FALSE
(
2
0
TRUE
0
0
0
0
0
0
(*Comment*)
3
comm
2
codehl


0
0

0
1
Closing *)

\*\)
FALSE
FALSE
comm
0


-1
-2
3
FALSE
FALSE
FALSE

0
(**)

FALSE

0
0
TRUE
0
0
0
0
0
0
Opening tag detail
0
mu
3



0
0

0
1
Opening angle
Guaranteed to be matched since we are in a detail subscheme used by the opening tag elements in the main scheme
<
FALSE
FALSE
mud
0


-1
6
3
FALSE
FALSE
FALSE
0

<>

FALSE
>
0
7
TRUE
0
0
0
0
0
0
Opening tag
3
mu
3



0
0

0
1
Opening tag
Guaranteed to be matched since this subscheme was toggled to after the opening angle was matched
\i\c*+
FALSE
FALSE
mu
0


-1
7
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Tag contents
3
mua
3



0
0
8
0
3
=

=\s*+
FALSE
FALSE
mud
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Double-quoted value

"
FALSE
FALSE
muv
0


-1
11
3
FALSE
FALSE
FALSE
0

DQ
xml
FALSE
"
2
0
TRUE
0
0
0
0
0
0
Single-quoted value

'
FALSE
FALSE
muv
0


-1
12
3
FALSE
FALSE
FALSE
0

SQ
xml
FALSE
'
2
0
TRUE
0
0
0
0
0
0
End of tag
4
0
2
Closing angle

>
FALSE
FALSE
mud
0


-1
-1
3
FALSE
FALSE
FALSE

0
<>

FALSE

0
9
TRUE
0
0
0
0
0
0
Empty closing angle

/>
FALSE
FALSE
mud
0


-1
-1
3
FALSE
FALSE
FALSE

0
<>

FALSE

0
10
TRUE
0
0
0
0
0
0
Closing tag detail
0
mu
3



0
0

0
1
Opening angle
Guaranteed to be matched since we are in a detail subscheme used by the closing tag elements in the main scheme
</
FALSE
FALSE
mud
0


-1
10
3
FALSE
FALSE
FALSE
0

<>

FALSE
>
0
8
TRUE
0
0
0
0
0
0
End of closing tag
3
mu
3



0
0

0
1
Closing angle

>
FALSE
FALSE
mud
0


-1
-1
3
FALSE
FALSE
FALSE

0
<>

FALSE

0
9
TRUE
0
0
0
0
0
0
DQ Attribute
3
muv
3



0
0
8
0
2
Closing quote

"
FALSE
FALSE
muv
0


-1
7
3
FALSE
FALSE
FALSE

0
DQ
xml
FALSE

0
0
TRUE
0
0
0
0
0
0
CSS color

(?<=[\s"'{;=])(?<CSS>#[0-9A-F]{3}(?:[0-9A-F](?:[0-9A-F]{2}(?:[0-9A-F]{2})?+)?+)?+|\m(?>aliceblue|antiquewhite|aqua(?:marine)?+|azure|beige|bisque|black|blanchedalmond|blue(?:violet)?+|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|dark(?>blue|cyan|goldenrod|gr[ae]y|green|khaki|magenta|olivegreen|orange|orchid|red|salmon|seagreen|slateblue|slategr[ae]y|turquoise|violet)|deep(?>pink|skyblue)|dimgr[ae]y|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold(?:enrod)?+|gr[ae]y|green(?:yellow)?+|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender(?:blush)?+|lawngreen|lemonchiffon|light(?>blue|coral|cyan|goldenrodyellow|gr[ae]y|green|pink|salmon|seagreen|skyblue|slategr[ae]y|steelblue|yellow)|lime(?:green)?+|linen|magenta|maroon|medium(?>aquamarine|blue|orchid|purple|seagreen|slateblue|springgreen|turquoise|violetred)|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive(?:drab)?+|orange(?:red)?+|orchid|pale(?:goldenrod|green|turquoise|violetred)|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slate(?>blue|gr[ae]y)|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white(?:smoke)?+|yellow(?:green)?+))\M
TRUE
FALSE
muv
0


-3
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
SQ Attribute
3
muv
3



0
0
8
0
2
Closing quote

'
FALSE
FALSE
muv
0


-1
7
3
FALSE
FALSE
FALSE

0
SQ
xml
FALSE

0
0
TRUE
0
0
0
0
0
0
CSS color

(?<=[\s"'{;=])(?<CSS>#[0-9A-F]{3}(?:[0-9A-F](?:[0-9A-F]{2}(?:[0-9A-F]{2})?+)?+)?+|\m(?>aliceblue|antiquewhite|aqua(?:marine)?+|azure|beige|bisque|black|blanchedalmond|blue(?:violet)?+|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|dark(?>blue|cyan|goldenrod|gr[ae]y|green|khaki|magenta|olivegreen|orange|orchid|red|salmon|seagreen|slateblue|slategr[ae]y|turquoise|violet)|deep(?>pink|skyblue)|dimgr[ae]y|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold(?:enrod)?+|gr[ae]y|green(?:yellow)?+|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender(?:blush)?+|lawngreen|lemonchiffon|light(?>blue|coral|cyan|goldenrodyellow|gr[ae]y|green|pink|salmon|seagreen|skyblue|slategr[ae]y|steelblue|yellow)|lime(?:green)?+|linen|magenta|maroon|medium(?>aquamarine|blue|orchid|purple|seagreen|slateblue|springgreen|turquoise|violetred)|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive(?:drab)?+|orange(?:red)?+|orchid|pale(?:goldenrod|green|turquoise|violetred)|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slate(?>blue|gr[ae]y)|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white(?:smoke)?+|yellow(?:green)?+))\M
TRUE
FALSE
muv
0


-3
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
XML Comment
1
comm
2



0
0

0
2
Closing -->

-->
FALSE
FALSE
comm
0


-1
0
3
FALSE
FALSE
FALSE

0
<!-->
xml
FALSE

0
0
TRUE
0
0
0
0
0
0
URL

(?:\m(?:(?:https?+|ftp|file)://|www|ftp)|//(?:www|ftp)\.)(?:\([-A-Z0-9+&@#/%=~_|$?!:,.]*\)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:\([-A-Z0-9+&@#/%=~_|$?!:,.]*\)|[A-Z0-9+&@#/%=~_|$])
TRUE
FALSE
ilink
1


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
CDATA
1
str
2



0
0

0
1
Closing tag

]]>
FALSE
FALSE
str
0


-1
0
3
FALSE
FALSE
FALSE

0
[CDATA]
xml
FALSE

0
0
TRUE
0
0
0
0
0
0
Processing instruction
1
preproc
3



0
0

0
2
Closing ?>

\?>
FALSE
FALSE
preproc
0


-1
-1
3
FALSE
FALSE
FALSE

0
<?
xml
FALSE

0
0
TRUE
0
0
0
0
0
0
Another tag
Though not valid in XML, we permit < tags to keep syntax coloring consistent while the file is being edited
(?=<)
FALSE
FALSE
mu
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
DTD Tag
1
mua
3



0
0

0
7
Double-quoted value

"
FALSE
FALSE
muv
0


-1
18
3
FALSE
FALSE
FALSE
0

DTD DQ
xml
FALSE
"
2
0
TRUE
0
0
0
0
0
0
Single-quoted value

'
FALSE
FALSE
muv
0


-1
19
3
FALSE
FALSE
FALSE
0

DTD SQ
xml
FALSE
'
2
0
TRUE
0
0
0
0
0
0
Closing >

>
FALSE
FALSE
mu
0


-1
0
3
FALSE
FALSE
FALSE

0
<!>
xml
FALSE

0
0
TRUE
0
0
0
0
0
0
DTD Comment

--
FALSE
FALSE
comm
0


-1
17
3
FALSE
FALSE
FALSE
0

DTD --
xml
FALSE
--
2
0
TRUE
0
0
0
0
0
0
DTD Parameter

%(?:\i\c*+;)?
FALSE
FALSE
op
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
DTD Operator

[=(),|*+?]++
FALSE
FALSE
op
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Another tag
Though not valid in XML, we permit < tags to keep syntax coloring consistent while the file is being edited
(?=<)
FALSE
FALSE
mu
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
DTD Comment
1
comm
2



0
0

0
3
Closing --

--
FALSE
FALSE
comm
0


-1
16
3
FALSE
FALSE
FALSE

0
DTD --
xml
FALSE

0
0
TRUE
0
0
0
0
0
0
Closing >

>
FALSE
FALSE
mu
0


-1
0
3
FALSE
FALSE
FALSE

0
<!>
xml
FALSE

0
0
TRUE
0
0
0
0
0
0
URL

(?:\m(?:(?:https?+|ftp|file)://|www|ftp)|//(?:www|ftp)\.)(?:\([-A-Z0-9+&@#/%=~_|$?!:,.]*\)|[-A-Z0-9+&@#/%=~_|$?!:,.])*(?:\([-A-Z0-9+&@#/%=~_|$?!:,.]*\)|[A-Z0-9+&@#/%=~_|$])
TRUE
FALSE
ilink
1


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
DTD DQ Value
1
str
3



0
0

0
2
Closing quote

"
FALSE
FALSE
muv
0


-1
16
3
FALSE
FALSE
FALSE

0
DTD DQ
xml
FALSE

0
0
TRUE
0
0
0
0
0
0
Another tag
Though not valid in XML, we permit < tags to keep syntax coloring consistent while the file is being edited
(?=<)
FALSE
FALSE
mu
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
DTD SQ Value
1
str
3



0
0

0
2
Closing quote

'
FALSE
FALSE
muv
0


-1
16
3
FALSE
FALSE
FALSE

0
DTD SQ
xml
FALSE

0
0
TRUE
0
0
0
0
0
0
Another tag
Though not valid in XML, we permit < tags to keep syntax coloring consistent while the file is being edited
(?=<)
FALSE
FALSE
mu
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
