JGCSCS
7
Download the Just Great Software Custom Syntax Coloring Scheme Editor from https://www.editpadpro.com/cscs.html to create and edit Just Great Software Custom Syntax Coloring Schemes
TRUE
C#
*.cs
Just Great Software
support@editpadpro.com
http://www.editpadpro.com
http://www.ecma-international.org/publications/standards/Ecma-334.htm
FALSE
//

0
6
#region preprocessor
// comment
public static void Test() {
  Number = 1234;
  String = "abcdef";
}

1
0
0

0
22
Single-line doc comment

///(?!/).*+
FALSE
FALSE
doccomm
0


-1
-1
2
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Single-line comment

//.*+
FALSE
FALSE
comm
0


-1
-1
2
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Multi-line doc comment

/\*\*(?![*/])
FALSE
TRUE
doccomm
0


-1
2
3
FALSE
FALSE
FALSE
0

/**/
code
FALSE
*/
0
0
TRUE
0
0
0
0
0
0
Multi-line comment

/\*
FALSE
TRUE
comm
0


-1
1
3
FALSE
FALSE
FALSE
0

/**/
code
FALSE
*/
2
0
TRUE
0
0
0
0
0
0
Opening brace

{
FALSE
FALSE
brkts
0


-1
-1
3
FALSE
FALSE
FALSE
0

{}
code
FALSE
}
2
2
TRUE
0
0
0
0
0
0
Closing brace

}
FALSE
FALSE
brkts
0


-1
-1
3
FALSE
FALSE
FALSE

0
{}
code
FALSE
{
2
3
TRUE
0
0
0
0
0
0
Opening bracket

\[
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE
0

[]
code
FALSE
]
2
0
TRUE
0
0
0
0
0
0
Closing bracket

]
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE

0
[]
code
FALSE
[
2
0
TRUE
0
0
0
0
0
0
Opening parenthesis

\(
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE
0

()
code
FALSE
)
2
0
TRUE
0
0
0
0
0
0
Closing parenthesis

\)
FALSE
FALSE
brkt
0


-1
-1
3
FALSE
FALSE
FALSE

0
()
code
FALSE
(
2
0
TRUE
0
0
0
0
0
0
Operator

[-+*/=<>%&^|!~?]
FALSE
FALSE
op
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
String

(?:\m[LuU])?"
FALSE
FALSE
str
0


-1
3
1
FALSE
FALSE
FALSE
0

DQ
code
FALSE
"
2
0
TRUE
0
0
0
0
0
0
Character
Closing quote optional so an unclosed string is still colored as a string
(')[^'\\\v]*+(?:\\(?:.|$)[^'\\\v]*+)*+(')?
FALSE
FALSE
ch
0


-1
-1
3
FALSE
FALSE
FALSE
1
2

code
FALSE
'
2
0
TRUE
0
0
0
0
0
0
Verbatim string
Can span multiple lines.  Quotes in the string are doubled rather than escaped.
(@")[^"]*+(?:""[^"]*+)*+(")?
FALSE
TRUE
str
0


-1
-1
2
FALSE
FALSE
FALSE
1
2

code
FALSE
"
2
0
TRUE
0
0
0
0
53
0
Identifier

@\w++
FALSE
FALSE

0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Hexadecimal number

\m0x[0-9A-F]++(?:_++[0-9A-F]++)*+(?:ul?+|lu?+)?+\M
TRUE
FALSE
int
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Binary number

\m0b[01]++(?:_++[01]++)*+(?:ul?+|lu?+)?+\M
TRUE
FALSE
int
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Float

(?:\m[0-9]++(?:_++[0-9]++)*+)?+\.[0-9]++(?:_++[0-9]++)*+(?:e[+-]?+[0-9]++(?:_++[0-9]++)*+)?+[fdm]?+\M
TRUE
FALSE
float
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Integer

\m[0-9]++(?:_++[0-9]++)*+(?:ul?+|lu?+)?+\M
TRUE
FALSE
int
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Keywords

\m(?>abstract|as|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|do(?:uble)?+|else|enum|event|explicit|extern|false|finally|fixed|float|for(?:each)?+|goto|if|implicit|in(?:t(?:erface|ernal)?+)?+|is|lock|long|namespace|new|null|object|operator|out|override|params|private|protected|public|readonly|ref|return|sbyte|sealed|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|virtual|void|volatile|while)\M
FALSE
FALSE
keyword
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Contextual keywords

(?<!\S)(?>add|alias|ascending|async|await|by|descending|dynamic|equals|from|get|global|group|into|join|let|nameof|on|orderby|partial|remove|select|set|unmanaged|value|var|when|where|yield)(?![\S-[;]])
FALSE
FALSE
keyword
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Preprocessor statement
Can be terminated by a single-line comment
^[ \t]*+#[ \t]*+(?>define|undef|if|elif|else|endif|line|error|warning|region|endregion)\M.*?(?=//|$)
FALSE
FALSE
preproc
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
0
3
Multi-line Comment
1
comm
2



0
0

0
1
Closing */

\*/
FALSE
FALSE
comm
0


-1
-2
3
FALSE
FALSE
FALSE

0
/**/
code
FALSE
/*
2
0
TRUE
0
0
0
0
0
0
Multi-line doc comment
1
doccomm
2



0
0

0
1
Closing */

\*/
FALSE
FALSE
doccomm
0


-1
-2
3
FALSE
FALSE
FALSE

0
/**/
code
FALSE
/*
2
0
TRUE
0
0
0
0
0
0
String
1
str
14



0
0

0
3
Closing quote

"
FALSE
FALSE
str
0


-1
0
1
FALSE
FALSE
FALSE

0
DQ
code
FALSE

0
0
TRUE
0
0
0
0
0
0
Escaped character

\\.
FALSE
FALSE
ch
0


-1
-1
7
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
End of line
Highlight unterminated strings until the end of the line
$
FALSE
FALSE
str
0


-1
0
1
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
